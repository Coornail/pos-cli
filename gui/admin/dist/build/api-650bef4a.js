import{I as e,O as n}from"./main-314627b3.js";import{n as t}from"./store-b96b4bfd.js";function r(e,n="default",r){t.set({type:n,message:e,timeout:r})}function a(e,n){r(e,"info",n)}function o(e,n){r(e,"success",n)}var s=(()=>{const{subscribe:n,set:t,update:r}=e({});return{subscribe:n,set:t,update:r,reset:()=>{t({})}}})(),d={array:"value_array",boolean:"value_boolean",date:"value",datetime:"value",float:"value_float",integer:"value_int",string:"value"};const i=e=>Object.keys(e).map(n=>{const{name:t,value:r,attribute_type:a}=e[n];return`{ name: "${t}", ${d[a]}: ${"string"===a?`"${r}"`:r}}`}).join("\n"),l=e=>fetch("/api/graph",{headers:{"Content-Type":"application/json"},method:"POST",body:JSON.stringify(e)}).then(e=>e.json()).then(e=>{if(!e.errors)return e&&e.data;{const n=e.errors[0].message;r("Error: "+n,"danger",5e3)}});var u={getModelSchemas:e=>l({query:`query {\n      admin_model_schemas(\n          per_page: 100\n          ${e?`filter: { id: { value: ${e} } }`:""}\n        ) {\n        results {\n          id\n          name\n          properties {\n            name\n            attribute_type\n          }\n        }\n      }\n    }`}).then(e=>e.admin_model_schemas.results),getModels({schemaId:e,id:t,deleted:r=!1}){const a=n(s);let o="";a.property&&a.operation&&a.type&&(o=(e=>`\n    properties: [{\n      name: "${e.property}"\n      ${e.operation}: ${e.value}\n    }]\n  `)(a));return l({query:`query {\n      models(\n        per_page: 20,\n        sort: { created_at: { order: DESC } },\n        filter: {\n          ${e?`model_schema_id: { value: ${e} }`:""}\n          ${t?`id: { value: ${t} }`:""}\n          ${r?"deleted_at: { exists: true }":""}\n          ${o}\n        }\n      ) {\n        results {\n          id\n          created_at\n          updated_at\n          deleted_at\n          properties\n        }\n      }\n    }`}).then(e=>e.models.results)},updateModel({id:e,props:n}){const t=i(n);return l({query:`\n      mutation {\n        model_update(\n          id: ${e},\n          model: {\n            properties: [${t}]\n          }\n        ) {\n          id\n        }\n      }`})},deleteModel:e=>l({query:`mutation {\n      model_delete(id: ${e}) {\n        id\n      }\n    }`}),undeleteModel:e=>l({query:`\n      mutation {\n        model_update(\n          id: ${e},\n          model: { deleted_at: null }\n        ) {\n          id\n        }\n      }`}),createModel(e,n){const t=i(n);return l({query:`mutation {\n      model_create(model: {\n        model_schema_name: "${e}",\n        properties: [${t}]\n      }) {\n        id\n      }\n    }`})}};export{u as a,s as f,a as i,o as s};
